name: Django CI

on:
  push:
    branches: [ "main", "feature/*" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 2
      matrix:
        python-version: [3.13, 3.12]

    services:
      # Add SQLite service as database backend
      sqlite:
        image: nouchka/sqlite3:latest
        ports:
          - 5432:5432

    env:
      DJANGO_SECRET_KEY: 'github-actions-test-key-not-for-production'
      DJANGO_DEBUG: 'True'
      DJANGO_ALLOWED_HOSTS: 'localhost,127.0.0.1'

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
    
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest pytest-django
        pip install -r requirements.txt
    
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Run Tests
      run: |
        pytest

  deploy:
    needs: test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.13'
    
    - name: Install deployment dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel
    
    - name: Build artifact
      run: |
        # Create a deployment package
        mkdir -p deploy
        cp -r applications accounts catalog core manage.py requirements.txt deploy/
        cd deploy && zip -r ../career-campass-deploy.zip .
    
    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: django-app
        path: career-campass-deploy.zip
        retention-days: 5
        
    # This step would be customized based on your actual deployment target
    - name: Deploy
      run: |
        echo "Deploying application to server..."
        # Add your deployment commands here
        # For example: rsync, scp, or calls to cloud provider APIs
